///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #3 (P2)
Full Name  : Pei-Ti, Chen
Student ID#: 13323722
Email      : pchen81@myseneca.ca
Section    : NAA

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. 
((dailyServings >= 1 && dailyServings <= 4) && (coffeeWeight1 == 250)) ||
((dailyServings >= 5 && dailyServings <= 9) && (coffeeWeight1 == 500)) ||
((dailyServings >= 10) && (coffeeWeight1 == 1000))

A) ==, >=, <= are relational expressions
1. dailyServings >= 1
2. dailyServings <= 4
3. coffeeWeight1 == 250
4. dailyServings >= 5
5. dailyServings <= 9
6. coffeeWeight1 == 500
7. dailyServings >= 10
8. coffeeWeight1 == 1000

B) && and || are logical expressions
1-3. (dailyServings >= 1 && dailyServings <= 4) && (coffeeWeight1 == 250)||
2. (dailyServings >= 5 && dailyServings <= 9) && (coffeeWeight1 == 500)||
3. (dailyServings >= 10) && (coffeeWeight1 == 1000)

2.
My way :product3Id != product1Id && product3Id != product2Id
DeMorganâ€™s Law : !(product3Id == product1Id || product3Id == product2Id)

3.My way: Organise variables in the order in which they appear.
	const double GRAMS_IN_LBS = 453.5924;
	char coffeeType1, coffeeType2, coffeeType3;
	int coffeeWeight1, coffeeWeight2, coffeeWeight3;
	char cream1, cream2, cream3;
	char coffeeStrength, creamGuest;
	int dailyServings;
Another way: Organise variables according to their kind.
	const double GRAMS_IN_LBS = 453.5924;
	char coffeeType1, coffeeType2, coffeeType3;
	char cream1, cream2, cream3;
	char coffeeStrength, creamGuest;
	int coffeeWeight1, coffeeWeight2, coffeeWeight3;
	int dailyServings;


	 	
