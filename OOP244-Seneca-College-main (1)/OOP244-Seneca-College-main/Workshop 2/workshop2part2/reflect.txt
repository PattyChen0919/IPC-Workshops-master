//==============================================
// Name           : Kabir Narula
// Email          : Knarula9@myseneca.ca
// Student ID     : 127962223
// Section        : NAA
// Date           : 05/30/2023(tuesday)
//==============================================
//I did all the code by myself and only copied the code given by professor 
//provided to complete my workshops and assignments.


In completing this workshop on dynamic memory,I have learned several topics and demonstrated the following abilities:
1)Allocating and deallocating dynamic memory for an array- I've learned how to utilise this technique to generate arrays whose size can be changed at runtime.
This enables adaptable memory management and effective memory use. In order to prevent memory leaks and guarantee good memory management,
I have also learnt how crucial it is to deallocate the allocated memory.
  2)-Creating and using references- C++  allows for aliasing or creating alternative names for existing variables. I have learned how to pass variables by reference to functions, enabling the modification of variables in other scopes.
  This can improve code efficiency and avoid unnecessary memory usage.
    3)Also, now i am pretty good with how to make several functions with the same name but various argument lists also called function overloading. 
    This improves the organisation and reuse of the code by enabling the use of the same function name for several operations or data types.


   Question2) - 
    An in parameter, is used to pass data into a function. When a function has an in parameter, it receives the value of the parameter from the calling code. The function can read and use the value of the parameter,
    but it cannot modify the original value or propagate the changes back to the calling code.In C++, in parameters are typically passed by value or by const reference
    Out parameters in C++ are frequently supplied as pointers or non-const references. The function can directly alter the value pointed to by the parameter by passing by reference or pointer. 
    This enables the function to give the calling code more data or outcomes.
For example-: an in parameter is like a book you lend to a friend. They can read and use the book, but they can't make any changes to it. An out parameter is like asking your friend to write a message in a notebook and give it back to you.
They can write and modify the notebook before returning it to you.

FROM THE CODE___

The function read(char* str) takes a character array (char*) as an input parameter. 
It reads a string from the file and stores it in the provided character array. 
It does not modify the original parameter str but only fills it with the data read from the file.

Similarly, the function read(int& value) takes an integer reference (int&) as an input parameter. 
It reads an integer value from the file and assigns it to the provided reference variable value.
Again, the original parameter value is not modified, but its value is updated based on the data read from the file.