///////////////////////////////////////////////////////////////////////////
                               Reflection
                             Workshop - #5
Full Name  : Pei-Ti, Chen
Student ID#: 13323722
Email      : pchen81@myseneca.ca
Section    : NAA 

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. Why do we try to use variables and macros to represent information rather than hardcode "magic" numbers (constant literals)? Using the details of this workshop, describe at least three advantages this provides us?

Ans: The reason to use variables and macros is 1.Easy to maintain. 2. Good to readability. 3. More resilient and extensible. 4.Save time. 
Because if we always use hardcode to code our project, it's hard to adjust and not readability, and is non-reusable. When we use variables and macros, beacue we get meaningful name for them, and we can easily change those values and make the code more resilient, extensible, and save time to code our program. Otherwise, we need to search every line to find the code we want to change. Imagine if the code had over 10,000 lines. How long would we need to spend on it? If we declare variables or macros at the beginning, and when something needs to change, just change the value of variables or macros, and the code will change through the whole project. 

2. The rating values entered by the user required iteration to perform basic validations with each iteration concentrated on testing for values to be within a specific range. Why do we not include additional logic that sums and performs the average? Instead, the sum and average logic is placed outside of any validation routine. Briefly explain two reasons why this is better design and refer to the details of this workshop to justify your answer.

Ans: Reason : 1. More flexible and have good sequence. 2. Readability and Maintain.
If the sum and average logic is placed inside of any validation routine, the loop will run again and the result may be different as we want. So to avoid this situation, it is better to do it outside of the do-while.  Placing the sum and average logic outside of the validation routine provides readability in how the data is processed. Also, the sequence of the program is not error-prone.
